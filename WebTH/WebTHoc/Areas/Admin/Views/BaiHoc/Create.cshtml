@model Model.EF.BaiHoc

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section Header{
    Bài Học
}

@section Type{
    Thêm Bài Học
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Nhập Thông Tin Bài Học</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TieuDe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TieuDe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TieuDe, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TomTat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.TomTat, new { @class = "form-control textarea", @style = "width: 100%; height: 100px; font - size: 14px; line - height: 18px; border: 1px solid #dddddd; padding: 10px;" })
                @Html.ValidationMessageFor(model => model.TomTat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UrlHinh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UrlHinh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UrlHinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NoiDung, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.NoiDung, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NoiDung, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SoLanXem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SoLanXem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SoLanXem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnHien, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.AnHien)
                    @Html.ValidationMessageFor(model => model.AnHien, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDLoaiBaiHoc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IDLoaiBaiHoc,null,  new { @class = "idCha", @style = "width: 30%" })
                @Html.ValidationMessageFor(model => model.IDLoaiBaiHoc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Thêm Bài Học" class="btn btn-info" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Trở lại", "Index","",new { @class="btn btn-default"})
</div>
@section scripts{
    <script>
        CKEDITOR.replace('NoiDung', {
            uiColor: '#9AB8F3',
            toolbarGroups: [
                { "name": 'tools', "groups": ['Maximize', 'ShowBlocks'] },
                { "name": "insert", "groups": ["insert"] },
                { "name": "paragraph", "groups": ["list", "blocks"] },
				{ "name": "links", "groups": ["links"] },
				{ "name": "document", "groups": ["mode"] },
				{ "name": "about", "groups": ["about"] }, '/',
                { "name": "basicstyles", "groups": ["basicstyles"] },
                { "name": "styles", "groups": ["styles"] },
                { "name": "colors", "groups": ["colors"] }
            ],
            // Remove the redundant buttons from toolbar groups defined above.
            removeButtons: 'About,Save',
        });

    </script>
}
